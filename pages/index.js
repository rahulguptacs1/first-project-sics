import Head from "next/head";
import { getConfig } from "@bigcommerce/storefront-data-hooks/api";
import getAllProducts from "@bigcommerce/storefront-data-hooks/api/operations/get-all-products";
import styles from "../styles/Home.module.scss";
import Card from "../components/Card";
import { CSSTransition } from "react-transition-group";
import { useState } from "react";
import { modFunc, range } from "../helpers/utils";
import { usePrevious } from "../hooks/usePrevious";
import { useSwipe } from "../hooks/useSwipe";
import Review from "../components/Review";
import { useElementProperty } from "../hooks/useElementProperty";
import { useEffect } from "react/cjs/react.development";
import Link from "next/link";
import Slider from "../components/Home/Slider";

export default function Home({ products }) {
  const { activeIndex, swipeHandlers, prevIndex, nextIndex, swipeType } =
    useSwipe(5);
  const [showScrollUpButton, setShowScrollUpButton] = useState(false);
  const { propertyValue: reviewHeight, ref: reviewRef } = useElementProperty(
    "offsetHeight",
    (updaterFunc) => {
      window.addEventListener("resize", () => {
        // console.log("updating height");
        updaterFunc();
      });
    }
  );

  useEffect(() => {
    window.addEventListener("scroll", () => {
      // console.log(window.scrollY);
      // console.log(window.innerHeight);
      setShowScrollUpButton(window.scrollY > window.innerHeight / 2);
    });
  }, []);
  const prevActiveIndex = usePrevious(activeIndex);
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <p
        className={styles.first}
        onClick={() => {
          setShowScrollUpButton(!showScrollUpButton);
        }}
      >
        {" "}
        first page{" "}
      </p>
      <p>
        <Link href="/practice/about">
          <a>About App</a>
        </Link>
      </p>
      <div className={styles.section}>
        <h3 className={styles.head}>Top Rated Drones & Quadcopters</h3>
        <h4 className={styles.slug}>
          What differs our drone store from the rest of the crowd is our range
          and prices!
        </h4>
        <div className={styles.cards}>
          <Card product={products[0]} />
          <Card product={products[2]} />
          <Card product={products[3]} />
          <Card product={products[4]} />
        </div>
      </div>

      <div
        className={styles.reviews}
        style={{
          minHeight: `${reviewHeight}px`,
        }}
        {...swipeHandlers}
      >
        {range(0, 4).map((show, i) => {
          return (
            <CSSTransition
              in={i === activeIndex}
              key={i}
              timeout={300}
              classNames={`review-${swipeType}`}
              unmountOnExit
            >
              <div
                className={styles.review}
                style={{ zIndex: modFunc(prevActiveIndex)(i) }}
                ref={reviewRef}
              >
                <Review />
              </div>
            </CSSTransition>
          );
        })}
      </div>
      <Slider products={products} />
      <CSSTransition
        in={showScrollUpButton}
        timeout={300}
        classNames={`scroll-up-button`}
        unmountOnExit
      >
        <div
          className={styles.scrollUp}
          onClick={() => {
            window.scrollTo({ top: 0, behavior: "smooth" });
          }}
        >
          <i className="fa fa-arrow-up" aria-hidden="true"></i>
        </div>
      </CSSTransition>
    </div>
  );
}
export async function getServerSideProps({
  preview = "false",
  locale = "en-US",
}) {
  // Fetch data from external API
  const config = getConfig({ locale });
  const { products } = await getAllProducts({
    config,
    preview: true,
  });

  return { props: { products } };
}
